name: CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps --silent

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Determine environment context
        id: env-context
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.base_ref }}" == "main" ]]; then
            echo "ENV_NAME=Production" >> $GITHUB_ENV
          else
            echo "ENV_NAME=Preview" >> $GITHUB_ENV
          fi

      - name: Load DATABASE_URL from Github Environment
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          # Set it as action-level env for future steps
          echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV

      - name: Set DATABASE_URL into environment
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
        
      - name: Run DB migrations
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: npx prisma migrate deploy
        

      - name: Check for UI/backend changes
        id: changes
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          if git diff --quiet origin/${{ github.base_ref }} HEAD -- ./components/ui ./lib; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Build Next.js
        if: steps.changes.outputs.changed == 'true'
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: npm run build

      - name: Run tests
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: echo "No tests defined yet"
