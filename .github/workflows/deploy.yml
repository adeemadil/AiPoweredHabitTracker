name: CI Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' || github.base_ref == 'main' && 'Production' || 'Preview' }}
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"

      - name: Install dependencies
        run: npm install --legacy-peer-deps --silent

      - name: Lint code
        run: npm run lint

      - name: Check code formatting
        run: npm run format -- --check

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run database migrations
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
        run: npx prisma migrate deploy

      - name: Check for UI/backend changes
        id: changes
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          if git diff --quiet origin/${{ github.base_ref }} HEAD -- ./components/ui ./lib; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Build Next.js
        if: steps.changes.outputs.changed == 'true'
        run: npm run build

      # 7. Run Vitest unit tests (only if test files exist)
      - name: Run Vitest unit tests
        if: steps.changes.outputs.changed == 'true'
        env:
          CLERK_SECRET_KEY: test_secret_key
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: test_publishable_key
        run: |
          # Only run if there are .test or .spec files in __tests__
          if ls __tests__/*.{test,spec}.[jt]s* 1> /dev/null 2>&1; then
            npm run test
          else
            echo "No unit test files found in __tests__, skipping Vitest."
          fi

      # 8. Install Playwright browsers (only if Playwright test files exist)
      - name: Install Playwright Browsers
        if: steps.changes.outputs.changed == 'true'
        run: |
          # Only run if there are Playwright test files in __tests__
          if ls __tests__/*.{e2e,test,spec}.[jt]s* 1> /dev/null 2>&1; then
            npx playwright install --with-deps
          else
            echo "No Playwright test files found in __tests__, skipping browser install."
          fi

      # 9. Run Playwright E2E tests (only if Playwright test files exist)
      - name: Run Playwright E2E tests
        if: steps.changes.outputs.changed == 'true'
        env:
          CLERK_SECRET_KEY: test_secret_key
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: test_publishable_key
        run: |
          # Only run if there are Playwright test files in __tests__
          if ls __tests__/*.{e2e,test,spec}.[jt]s* 1> /dev/null 2>&1; then
            npm run test:e2e
          else
            echo "No Playwright E2E test files found in __tests__, skipping Playwright tests."
          fi
