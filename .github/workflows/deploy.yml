name: CI Pipeline

# Trigger workflow on push to main and pull requests to main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'push' && 'Production' || 'Test' }}

    env:
      DATABASE_URL: ${{ github.event_name == 'push' && secrets.DATABASE_URL || secrets.DATABASE_URL }}
      OPENAI_API_KEY: ${{ github.event_name == 'push' && secrets.OPENAI_API_KEY || secrets.OPENAI_API_KEY }}
      CLERK_SECRET_KEY: ${{ github.event_name == 'push' && secrets.CLERK_SECRET_KEY || secrets.CLERK_SECRET_KEY }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ github.event_name == 'push' && secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'

      # Cache npm dependencies
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Debug Secrets
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" | grep -o ".*=.*"
          echo "CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}" | grep -o ".*=.*"
          echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}" | grep -o ".*=.*"
        shell: bash

      # Install dependencies
      - name: Install dependencies
        run: npm install --legacy-peer-deps --silent

      # Generate Prisma client
      - name: Generate Prisma client
        run: npx prisma generate

      # Run database migrations (this is all you need after baseline is committed)
      - name: Run database migrations
        run: npx prisma migrate deploy

      # Run tests if they exist
      - name: Run tests
        run: |
          if [ -d "tests" ] || [ -d "__tests__" ]; then
            npm run test
          else
            echo "No tests directory found, skipping tests"
          fi
        continue-on-error: true

      # Build Next.js application
      - name: Build Next.js app
        run: npm run build

      # Upload build artifacts (optional, for debugging)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: .next/
          retention-days: 7 